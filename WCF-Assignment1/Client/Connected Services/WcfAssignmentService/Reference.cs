//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.WcfAssignmentService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortType", Namespace="http://schemas.datacontract.org/2004/07/wcf_assignment1")]
    public enum SortType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ascending = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Descending = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfAssignmentService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsPrimeNumber", ReplyAction="http://tempuri.org/IService/IsPrimeNumberResponse")]
        bool IsPrimeNumber(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsPrimeNumber", ReplyAction="http://tempuri.org/IService/IsPrimeNumberResponse")]
        System.Threading.Tasks.Task<bool> IsPrimeNumberAsync(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CalculateSumOfDigits", ReplyAction="http://tempuri.org/IService/CalculateSumOfDigitsResponse")]
        int CalculateSumOfDigits(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CalculateSumOfDigits", ReplyAction="http://tempuri.org/IService/CalculateSumOfDigitsResponse")]
        System.Threading.Tasks.Task<int> CalculateSumOfDigitsAsync(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ReverseString", ReplyAction="http://tempuri.org/IService/ReverseStringResponse")]
        string ReverseString(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ReverseString", ReplyAction="http://tempuri.org/IService/ReverseStringResponse")]
        System.Threading.Tasks.Task<string> ReverseStringAsync(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ConvertToHTMLTag", ReplyAction="http://tempuri.org/IService/ConvertToHTMLTagResponse")]
        string ConvertToHTMLTag(string tag, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ConvertToHTMLTag", ReplyAction="http://tempuri.org/IService/ConvertToHTMLTagResponse")]
        System.Threading.Tasks.Task<string> ConvertToHTMLTagAsync(string tag, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Sort", ReplyAction="http://tempuri.org/IService/SortResponse")]
        int[] Sort(Client.WcfAssignmentService.SortType type, string[] numbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Sort", ReplyAction="http://tempuri.org/IService/SortResponse")]
        System.Threading.Tasks.Task<int[]> SortAsync(Client.WcfAssignmentService.SortType type, string[] numbers);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Client.WcfAssignmentService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Client.WcfAssignmentService.IService>, Client.WcfAssignmentService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsPrimeNumber(int number) {
            return base.Channel.IsPrimeNumber(number);
        }
        
        public System.Threading.Tasks.Task<bool> IsPrimeNumberAsync(int number) {
            return base.Channel.IsPrimeNumberAsync(number);
        }
        
        public int CalculateSumOfDigits(int number) {
            return base.Channel.CalculateSumOfDigits(number);
        }
        
        public System.Threading.Tasks.Task<int> CalculateSumOfDigitsAsync(int number) {
            return base.Channel.CalculateSumOfDigitsAsync(number);
        }
        
        public string ReverseString(string data) {
            return base.Channel.ReverseString(data);
        }
        
        public System.Threading.Tasks.Task<string> ReverseStringAsync(string data) {
            return base.Channel.ReverseStringAsync(data);
        }
        
        public string ConvertToHTMLTag(string tag, string data) {
            return base.Channel.ConvertToHTMLTag(tag, data);
        }
        
        public System.Threading.Tasks.Task<string> ConvertToHTMLTagAsync(string tag, string data) {
            return base.Channel.ConvertToHTMLTagAsync(tag, data);
        }
        
        public int[] Sort(Client.WcfAssignmentService.SortType type, string[] numbers) {
            return base.Channel.Sort(type, numbers);
        }
        
        public System.Threading.Tasks.Task<int[]> SortAsync(Client.WcfAssignmentService.SortType type, string[] numbers) {
            return base.Channel.SortAsync(type, numbers);
        }
    }
}
